{"version":3,"sources":["components/Navbar.js","components/Backdrop.js","components/FormComponents.js","components/Form.js","components/ProjectItem.js","components/ProjectList.js","components/MenuPanel.js","components/TaskItem.js","components/TaskList.js","data/data.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","className","onClick","toggleMenu","setCurrentProject","Backdrop","closeForm","SaveButton","type","disabled","CancelButton","TaskForm","data","taskDefault","task","title","description","project","id","currentProject","priority","dueDate","format","Date","now","infoType","useState","setTask","handleChange","e","target","name","value","JSON","parse","formName","onSubmit","preventDefault","addTask","editTask","formHeader","placeholder","required","onChange","stringify","projects","map","key","min","NewProjectForm","state","setState","handleSubmit","addProject","toggleProjectForm","this","Component","EditProjectForm","setProject","editProject","updatedTasks","tasks","NewTaskForm","EditTaskForm","ProjectItem","handleClick","stopPropagation","openEditForm","window","confirm","deleteProject","ProjectList","projectList","item","MenuPanel","isFormVisible","setVisibility","useEffect","isMenuOpen","projectForm","menuClasses","join","TaskItem","isCompleted","setIsCompleted","isExpanded","setIsExpanded","hover","setHover","dueDateText","taskClasses","isToday","parseISO","isTomorrow","checked","deleteTask","onMouseEnter","onMouseLeave","projectTitle","TaskList","taskItems","filter","sortTasks","sort","task1","task2","reduce","acc","val","concat","openNewTaskForm","localStorage","setItem","getItem","App","isEditingProject","isEditingTask","itemToEdit","isCreatingTask","prevState","projectId","getTaskIndex","currentTask","findIndex","updateStorage","uuidv4","updatedProjects","deletedTask","index","slice","editedTask","editedProject","deletedProject","formState","React","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.eb6c74b9.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Menu, Home } from 'react-feather';\r\n\r\nfunction Navbar(props) {\r\n\tconst handleClick = () => {\r\n\t\tprops.setCurrentProject('default', 'All tasks');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<nav>\r\n\t\t\t<ul className=\"navbar\">\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"nav-link menu-btn\"\r\n\t\t\t\t\t\tonClick={props.toggleMenu}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Menu className=\"feather-icon\" />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<button className=\"nav-link home-btn\" onClick={handleClick}>\r\n\t\t\t\t\t\t<Home className=\"feather-icon\" />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t\t<h1>To-do</h1>\r\n\t\t</nav>\r\n\t);\r\n}\r\n\r\nNavbar.propTypes = {\r\n\ttoggleMenu: PropTypes.func,\r\n\tcurrentProject: PropTypes.object,\r\n\tsetCurrentProject: PropTypes.func,\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Backdrop(props) {\r\n\treturn <div className=\"backdrop\" onClick={props.closeForm}></div>;\r\n}\r\n\r\nBackdrop.propTypes = {\r\n\tcloseForm: PropTypes.func,\r\n};\r\n\r\nexport default Backdrop;\r\n","import React, { useState } from 'react';\r\nimport { format } from 'date-fns';\r\nimport { Plus, X } from 'react-feather';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction SaveButton(props) {\r\n\treturn (\r\n\t\t<button type=\"submit\" className=\"save\" disabled={props.disabled}>\r\n\t\t\t<Plus />\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\nSaveButton.propTypes = {\r\n\tdisabled: PropTypes.bool,\r\n};\r\n\r\nfunction CancelButton(props) {\r\n\treturn (\r\n\t\t<button type=\"reset\" className=\"cancel\" onClick={props.onClick}>\r\n\t\t\t<X />\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\nCancelButton.propTypes = {\r\n\tonClick: PropTypes.func,\r\n};\r\n\r\nfunction TaskForm(props) {\r\n\tconst data = props.props;\r\n\r\n\tconst taskDefault = data.task || {\r\n\t\ttitle: '',\r\n\t\tdescription: '',\r\n\t\tproject: {\r\n\t\t\tid: data.currentProject.id,\r\n\t\t\ttitle: data.currentProject.title,\r\n\t\t},\r\n\t\tpriority: '3',\r\n\t\tdueDate: format(Date.now(), 'yyyy-MM-dd'),\r\n\t\tinfoType: 'task',\r\n\t};\r\n\r\n\tconst [task, setTask] = useState(taskDefault);\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tconst { name, value } = e.target;\r\n\t\tif (name !== 'project') {\r\n\t\t\tsetTask({ ...task, [name]: value });\r\n\t\t} else {\r\n\t\t\tconst { id, title } = JSON.parse(value);\r\n\t\t\tsetTask({ ...task, project: { id, title } });\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (data.formName === 'new-task') {\r\n\t\t\tdata.addTask(task);\r\n\t\t\tdata.closeForm();\r\n\t\t} else {\r\n\t\t\tdata.editTask(task);\r\n\t\t\tdata.closeForm();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form\r\n\t\t\tname={data.formName}\r\n\t\t\tclassName=\"task-form\"\r\n\t\t\tonSubmit={handleSubmit}\r\n\t\t>\r\n\t\t\t<h2>{data.formHeader}</h2>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname=\"title\"\r\n\t\t\t\tvalue={task.title}\r\n\t\t\t\tplaceholder=\"Task title\"\r\n\t\t\t\trequired\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t></input>\r\n\t\t\t<textarea\r\n\t\t\t\tname=\"description\"\r\n\t\t\t\tvalue={task.description}\r\n\t\t\t\tplaceholder=\"Task description\"\r\n\t\t\t\trequired\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t></textarea>\r\n\t\t\t<p>Project</p>\r\n\t\t\t<select\r\n\t\t\t\tname=\"project\"\r\n\t\t\t\trequired\r\n\t\t\t\tvalue={JSON.stringify(task.project)}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t>\r\n\t\t\t\t{data.projects.map((project) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<option\r\n\t\t\t\t\t\t\tkey={project.id}\r\n\t\t\t\t\t\t\tvalue={JSON.stringify({\r\n\t\t\t\t\t\t\t\tid: project.id,\r\n\t\t\t\t\t\t\t\ttitle: project.title,\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{project.title}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</select>\r\n\t\t\t<p>Priority</p>\r\n\t\t\t<select\r\n\t\t\t\tname=\"priority\"\r\n\t\t\t\tvalue={task.priority}\r\n\t\t\t\trequired\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t>\r\n\t\t\t\t<option value=\"3\">Low priority</option>\r\n\t\t\t\t<option value=\"2\">Medium priority</option>\r\n\t\t\t\t<option value=\"1\">High priority</option>\r\n\t\t\t</select>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"date\"\r\n\t\t\t\tname=\"dueDate\"\r\n\t\t\t\tmin={format(Date.now(), 'yyyy-MM-dd')}\r\n\t\t\t\tvalue={task.dueDate}\r\n\t\t\t\trequired\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t></input>\r\n\t\t\t<SaveButton />\r\n\t\t\t<CancelButton onClick={data.closeForm} />\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nTaskForm.propTypes = {\r\n\tprops: PropTypes.object,\r\n};\r\n\r\nexport { SaveButton, CancelButton, TaskForm };\r\n","import React, { Component, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Backdrop from './Backdrop';\r\nimport { SaveButton, CancelButton, TaskForm } from './FormComponents';\r\n\r\nclass NewProjectForm extends Component {\r\n\tstate = {\r\n\t\ttitle: '',\r\n\t};\r\n\r\n\thandleChange = (e) => {\r\n\t\tconst { name, value } = e.target;\r\n\t\tthis.setState({\r\n\t\t\t[name]: value,\r\n\t\t});\r\n\t};\r\n\r\n\thandleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.addProject(this.state);\r\n\t\tthis.setState({\r\n\t\t\ttitle: '',\r\n\t\t});\r\n\t\tthis.props.toggleProjectForm();\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<form name=\"project-form\" onSubmit={this.handleSubmit}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\tplaceholder=\"Project name\"\r\n\t\t\t\t\tvalue={this.state.title}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t></input>\r\n\t\t\t\t<SaveButton disabled={this.state.title ? false : true} />\r\n\t\t\t\t<CancelButton onClick={this.props.toggleProjectForm} />\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nNewProjectForm.propTypes = {\r\n\ttoggleProjectForm: PropTypes.func,\r\n\taddProject: PropTypes.func,\r\n};\r\n\r\nfunction EditProjectForm(props) {\r\n\tconst [project, setProject] = useState(props.project);\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tconst { value } = e.target;\r\n\t\tconst updatedTasks = project.tasks.map((task) => {\r\n\t\t\treturn { ...task, project: { ...task.project, title: value } };\r\n\t\t});\r\n\t\tsetProject({ ...project, title: value, tasks: updatedTasks });\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tprops.editProject(project);\r\n\t\tprops.closeForm();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Backdrop closeForm={props.closeForm} />\r\n\t\t\t<form name=\"edit-project\" onSubmit={handleSubmit}>\r\n\t\t\t\t<h2>Edit project</h2>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\tvalue={project.title}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t></input>\r\n\t\t\t\t\t<SaveButton\r\n\t\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t\tproject.title === props.project.title ? true : false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<CancelButton onClick={props.closeForm} />\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nEditProjectForm.propTypes = {\r\n\tcloseForm: PropTypes.func,\r\n\teditProject: PropTypes.func,\r\n\teditTask: PropTypes.func,\r\n\tproject: PropTypes.object,\r\n};\r\n\r\nfunction NewTaskForm(props) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Backdrop />\r\n\t\t\t<TaskForm\r\n\t\t\t\tprops={{\r\n\t\t\t\t\t...props,\r\n\t\t\t\t\tformName: 'new-task',\r\n\t\t\t\t\tformHeader: 'New task',\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction EditTaskForm(props) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Backdrop />\r\n\t\t\t<TaskForm props={{ ...props }} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport { NewProjectForm, EditProjectForm, NewTaskForm, EditTaskForm };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Edit, Trash } from 'react-feather';\r\n\r\nfunction ProjectItem(props) {\r\n\tfunction handleClick(e) {\r\n\t\te.stopPropagation();\r\n\t\tif (e.target.className === 'edit') {\r\n\t\t\tprops.openEditForm(props.project);\r\n\t\t} else if (e.target.className === 'remove') {\r\n\t\t\tconst userConfirm = window.confirm(\r\n\t\t\t\t'This action cannot be canceled. Are you sure?'\r\n\t\t\t);\r\n\t\t\tif (userConfirm === true) {\r\n\t\t\t\tprops.deleteProject(props.project);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<li\r\n\t\t\tclassName={\r\n\t\t\t\tprops.currentProject.id === props.project.id\r\n\t\t\t\t\t? 'project-card selected'\r\n\t\t\t\t\t: 'project-card'\r\n\t\t\t}\r\n\t\t\tonClick={() =>\r\n\t\t\t\tprops.setCurrentProject(props.project.id, props.project.title)\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<p>{props.project.title}</p>\r\n\t\t\t{props.project.id !== 'default' ? (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button className=\"edit\" onClick={handleClick}>\r\n\t\t\t\t\t\t<Edit />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className=\"remove\" onClick={handleClick}>\r\n\t\t\t\t\t\t<Trash />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t) : null}\r\n\t\t</li>\r\n\t);\r\n}\r\n\r\nProjectItem.propTypes = {\r\n\tproject: PropTypes.object,\r\n\tcurrentProject: PropTypes.object,\r\n\tsetCurrentProject: PropTypes.func,\r\n\topenEditForm: PropTypes.func,\r\n\tdeleteProject: PropTypes.func,\r\n};\r\n\r\nexport default ProjectItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ProjectItem from './ProjectItem';\r\n\r\nfunction ProjectList(props) {\r\n\tconst projectList = props.projects.map((item) => {\r\n\t\treturn (\r\n\t\t\t<ProjectItem\r\n\t\t\t\tkey={item.id}\r\n\t\t\t\tproject={item}\r\n\t\t\t\topenEditForm={props.openEditForm}\r\n\t\t\t\tdeleteProject={props.deleteProject}\r\n\t\t\t\tcurrentProject={props.currentProject}\r\n\t\t\t\tsetCurrentProject={props.setCurrentProject}\r\n\t\t\t/>\r\n\t\t);\r\n\t});\r\n\r\n\treturn <div>{projectList}</div>;\r\n}\r\n\r\nProjectList.propTypes = {\r\n\tprojects: PropTypes.array,\r\n\tcurrentProject: PropTypes.object,\r\n\tsetCurrentProject: PropTypes.func,\r\n\topenEditForm: PropTypes.func,\r\n\tdeleteProject: PropTypes.func,\r\n};\r\n\r\nexport default ProjectList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Plus } from 'react-feather';\r\nimport { NewProjectForm } from './Form';\r\nimport ProjectList from './ProjectList';\r\n\r\nfunction MenuPanel(props) {\r\n\tconst [isFormVisible, setVisibility] = useState(false);\r\n\r\n\tconst toggleProjectForm = () => {\r\n\t\tsetVisibility(!isFormVisible);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!props.isMenuOpen) {\r\n\t\t\tsetVisibility(false);\r\n\t\t}\r\n\t}, [props.isMenuOpen]);\r\n\r\n\t// Change menu classes when the menu button in navbar is clicked\r\n\tlet menuClasses = ['menu-panel'];\r\n\tif (props.isMenuOpen) {\r\n\t\tmenuClasses = [...menuClasses, 'open'];\r\n\t}\r\n\r\n\t// Check if form should be open\r\n\tlet projectForm;\r\n\tif (isFormVisible) {\r\n\t\tprojectForm = (\r\n\t\t\t<NewProjectForm\r\n\t\t\t\ttoggleProjectForm={toggleProjectForm}\r\n\t\t\t\taddProject={props.addProject}\r\n\t\t\t/>\r\n\t\t);\r\n\t} else {\r\n\t\tprojectForm = (\r\n\t\t\t<button className=\"new-project-btn\" onClick={toggleProjectForm}>\r\n\t\t\t\t<Plus />\r\n\t\t\t\t<p>New project</p>\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={menuClasses.join(' ')}>\r\n\t\t\t<ul className=\"projects-container\">\r\n\t\t\t\t<ProjectList\r\n\t\t\t\t\tprojects={props.projects}\r\n\t\t\t\t\tcurrentProject={props.currentProject}\r\n\t\t\t\t\tsetCurrentProject={props.setCurrentProject}\r\n\t\t\t\t\topenEditForm={props.openEditForm}\r\n\t\t\t\t\tdeleteProject={props.deleteProject}\r\n\t\t\t\t/>\r\n\t\t\t</ul>\r\n\t\t\t{projectForm}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nMenuPanel.propTypes = {\r\n\tprojects: PropTypes.array,\r\n\tcurrentProject: PropTypes.object,\r\n\tsetCurrentProject: PropTypes.func,\r\n\tisMenuOpen: PropTypes.bool,\r\n\taddProject: PropTypes.func,\r\n\topenEditForm: PropTypes.func,\r\n\tdeleteProject: PropTypes.func,\r\n};\r\n\r\nexport default MenuPanel;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { format, parseISO, isToday, isTomorrow } from 'date-fns';\r\nimport { ChevronDown, ChevronUp, Check } from 'react-feather';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TaskItem(props) {\r\n\tconst [isCompleted, setIsCompleted] = useState(false);\r\n\tconst [isExpanded, setIsExpanded] = useState(false);\r\n\tconst [hover, setHover] = useState(false);\r\n\r\n\tconst handleClick = () => {\r\n\t\tsetIsCompleted((isCompleted) => !isCompleted);\r\n\t\tprops.deleteTask(props.task);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetIsExpanded(false);\r\n\t}, [props.currentProject]);\r\n\r\n\tlet taskClasses = ['task-wrapper'];\r\n\r\n\tif (props.task.priority === '1') {\r\n\t\ttaskClasses = [...taskClasses, 'high-priority'];\r\n\t} else if (props.task.priority === '2') {\r\n\t\ttaskClasses = [...taskClasses, 'medium-priority'];\r\n\t} else {\r\n\t\ttaskClasses = [...taskClasses, 'low-priority'];\r\n\t}\r\n\r\n\tlet dueDateText;\r\n\r\n\tif (isToday(parseISO(props.task.dueDate))) {\r\n\t\tdueDateText = 'Today';\r\n\t} else if (isTomorrow(parseISO(props.task.dueDate))) {\r\n\t\tdueDateText = 'Tomorrow';\r\n\t} else {\r\n\t\tdueDateText = format(parseISO(props.task.dueDate), 'PPP');\r\n\t}\r\n\r\n\treturn (\r\n\t\t<li className={taskClasses.join(' ')}>\r\n\t\t\t<div className=\"task-card\">\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"expand-btn\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetIsExpanded((isExpanded) => !isExpanded);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{isExpanded ? <ChevronUp /> : <ChevronDown />}\r\n\t\t\t\t</button>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p>{props.task.title}</p>\r\n\t\t\t\t\t<div className=\"task-info-container\">\r\n\t\t\t\t\t\t<p className=\"task-info\">Due: {dueDateText}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\tchecked={isCompleted}\r\n\t\t\t\t\tonChange={() => null}\r\n\t\t\t\t></input>\r\n\t\t\t\t<label\r\n\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t\tonMouseEnter={() => setHover(true)}\r\n\t\t\t\t\tonMouseLeave={() => setHover(false)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{isCompleted || hover ? <Check /> : null}\r\n\t\t\t\t</label>\r\n\t\t\t</div>\r\n\t\t\t{isExpanded ? (\r\n\t\t\t\t<div className=\"expanded-info-container\">\r\n\t\t\t\t\t<p className=\"task-project-info\">{props.projectTitle}</p>\r\n\t\t\t\t\t<p>{props.task.description}</p>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"edit\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tprops.openEditForm(props.task);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tEdit task\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t) : null}\r\n\t\t</li>\r\n\t);\r\n}\r\n\r\nTaskItem.propTypes = {\r\n\ttask: PropTypes.object,\r\n\tprojectTitle: PropTypes.string,\r\n\tdeleteTask: PropTypes.func,\r\n\topenEditForm: PropTypes.func,\r\n\tcurrentProject: PropTypes.object,\r\n};\r\n\r\nexport default TaskItem;\r\n","import React from 'react';\r\nimport { parseISO } from 'date-fns';\r\nimport TaskItem from './TaskItem';\r\nimport { Plus } from 'react-feather';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TaskList(props) {\r\n\tconst project = props.projects.filter((project) =>\r\n\t\tproject.id === props.currentProject.id ? project : null\r\n\t)[0];\r\n\r\n\tconst sortTasks = (tasks) => {\r\n\t\treturn tasks\r\n\t\t\t.sort((task1, task2) => {\r\n\t\t\t\tif (JSON.parse(task1.priority) < JSON.parse(task2.priority)) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.sort((task1, task2) => {\r\n\t\t\t\tif (parseISO(task1.dueDate) > parseISO(task2.dueDate)) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t};\r\n\r\n\tlet taskItems;\r\n\r\n\tif (project.id === 'default') {\r\n\t\tconst tasks = props.projects\r\n\t\t\t.map((project) => project.tasks)\r\n\t\t\t.reduce((acc, val) => acc.concat(val));\r\n\r\n\t\tconst sortedTasks = sortTasks(tasks);\r\n\r\n\t\ttaskItems = sortedTasks.map((task) => (\r\n\t\t\t<TaskItem\r\n\t\t\t\tkey={task.id}\r\n\t\t\t\ttask={task}\r\n\t\t\t\tprojectTitle={task.project.title}\r\n\t\t\t\tdeleteTask={props.deleteTask}\r\n\t\t\t\topenEditForm={props.openEditForm}\r\n\t\t\t\tcurrentProject={props.currentProject}\r\n\t\t\t/>\r\n\t\t));\r\n\t} else {\r\n\t\tconst sortedTasks = sortTasks(project.tasks);\r\n\r\n\t\ttaskItems = sortedTasks.map((task) => (\r\n\t\t\t<TaskItem\r\n\t\t\t\tkey={task.id}\r\n\t\t\t\ttask={task}\r\n\t\t\t\tprojectTitle={task.project.title}\r\n\t\t\t\tdeleteTask={props.deleteTask}\r\n\t\t\t\topenEditForm={props.openEditForm}\r\n\t\t\t\tcurrentProject={props.currentProject}\r\n\t\t\t/>\r\n\t\t));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ul className=\"task-list\">\r\n\t\t\t{taskItems}\r\n\t\t\t<button className=\"new-task-btn\" onClick={props.openNewTaskForm}>\r\n\t\t\t\t<Plus />\r\n\t\t\t\t<p>New task</p>\r\n\t\t\t</button>\r\n\t\t</ul>\r\n\t);\r\n}\r\n\r\nTaskList.propTypes = {\r\n\tprojects: PropTypes.array,\r\n\tcurrentProject: PropTypes.object,\r\n\topenNewTaskForm: PropTypes.func,\r\n\topenEditForm: PropTypes.func,\r\n\tdeleteTask: PropTypes.func,\r\n};\r\n\r\nexport default TaskList;\r\n","// Initialize projects array when app is loaded\r\nconst projects = (function getProjects() {\r\n\tif (!('projects' in localStorage)) {\r\n\t\tconst defaultProject = { title: 'All tasks', id: 'default', tasks: [] };\r\n\t\tlocalStorage.setItem('projects', JSON.stringify([defaultProject]));\r\n\t}\r\n\treturn JSON.parse(localStorage.getItem('projects'));\r\n})();\r\n\r\nexport default projects;\r\n","import React from 'react';\nimport Navbar from './components/Navbar';\nimport MenuPanel from './components/MenuPanel';\nimport TaskList from './components/TaskList';\nimport { EditProjectForm, NewTaskForm, EditTaskForm } from './components/Form';\nimport { v4 as uuidv4 } from 'uuid';\nimport projects from './data/data';\n\nclass App extends React.Component {\n\tstate = {\n\t\tprojects: projects,\n\t\tisMenuOpen: false,\n\t\tisEditingProject: false,\n\t\tisEditingTask: false,\n\t\titemToEdit: {},\n\t\tisCreatingTask: false,\n\t\tcurrentProject: { id: 'default', title: 'All tasks' },\n\t};\n\n\ttoggleMenu = () => {\n\t\tthis.setState((prevState) => {\n\t\t\treturn {\n\t\t\t\tisMenuOpen: !prevState.isMenuOpen,\n\t\t\t};\n\t\t});\n\t};\n\n\tsetCurrentProject = (projectId, projectTitle) => {\n\t\tthis.setState({\n\t\t\tcurrentProject: { id: projectId, title: projectTitle },\n\t\t});\n\t};\n\n\tgetTaskIndex = (tasks, currentTask) => {\n\t\treturn tasks.findIndex((task) => task.id === currentTask.id);\n\t};\n\n\tupdateStorage = (data) => {\n\t\tthis.setState({\n\t\t\tprojects: data,\n\t\t});\n\t\tlocalStorage.setItem('projects', JSON.stringify(data));\n\t};\n\n\t// TASK CONTROL\n\n\taddTask = (task) => {\n\t\ttask.id = task.id || uuidv4();\n\t\tconst updatedProjects = this.state.projects.map((project) => {\n\t\t\tif (project.id === task.project.id) {\n\t\t\t\treturn { ...project, tasks: [...project.tasks, task] };\n\t\t\t}\n\t\t\treturn { ...project };\n\t\t});\n\n\t\tthis.updateStorage(updatedProjects);\n\t};\n\n\tdeleteTask = (deletedTask) => {\n\t\tconst updatedProjects = this.state.projects.map((project) => {\n\t\t\tif (this.getTaskIndex(project.tasks, deletedTask) !== -1) {\n\t\t\t\tconst index = this.getTaskIndex(project.tasks, deletedTask);\n\t\t\t\treturn {\n\t\t\t\t\t...project,\n\t\t\t\t\ttasks: [\n\t\t\t\t\t\t...project.tasks.slice(0, index),\n\t\t\t\t\t\t...project.tasks.slice(index + 1),\n\t\t\t\t\t],\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn project;\n\t\t});\n\n\t\tthis.updateStorage(updatedProjects);\n\t};\n\n\teditTask = (editedTask) => {\n\t\tconst updatedProjects = this.state.projects\n\t\t\t.map((project) => {\n\t\t\t\tif (this.getTaskIndex(project.tasks, editedTask) !== -1) {\n\t\t\t\t\tconst index = this.getTaskIndex(project.tasks, editedTask);\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...project,\n\t\t\t\t\t\ttasks: [\n\t\t\t\t\t\t\t...project.tasks.slice(0, index),\n\t\t\t\t\t\t\t...project.tasks.slice(index + 1),\n\t\t\t\t\t\t],\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn project;\n\t\t\t})\n\t\t\t.map((project) => {\n\t\t\t\tif (project.id === editedTask.project.id) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...project,\n\t\t\t\t\t\ttasks: [...project.tasks, editedTask],\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn { ...project };\n\t\t\t});\n\n\t\tthis.updateStorage(updatedProjects);\n\t};\n\n\t// PROJECT CONTROL\n\taddProject = (project) => {\n\t\tproject.id = uuidv4();\n\t\tproject.infoType = 'project';\n\t\tproject.tasks = [];\n\t\tthis.setState((prevState) => {\n\t\t\treturn {\n\t\t\t\tprojects: [...prevState.projects, project],\n\t\t\t};\n\t\t});\n\t\tlocalStorage.setItem(\n\t\t\t'projects',\n\t\t\tJSON.stringify([...this.state.projects, project])\n\t\t);\n\t};\n\n\teditProject = (editedProject) => {\n\t\tconst updatedProjects = this.state.projects.map((project) => {\n\t\t\tif (project.id === editedProject.id) {\n\t\t\t\treturn {\n\t\t\t\t\t...project,\n\t\t\t\t\ttitle: editedProject.title,\n\t\t\t\t\ttasks: editedProject.tasks,\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn { ...project };\n\t\t});\n\n\t\tthis.updateStorage(updatedProjects);\n\t};\n\n\tdeleteProject = (deletedProject) => {\n\t\tif (deletedProject.id === this.state.currentProject.id) {\n\t\t\tthis.setState({\n\t\t\t\tcurrentProject: { id: 'default', title: 'All tasks' },\n\t\t\t});\n\t\t}\n\t\tconst updatedProjects = this.state.projects.filter((project) => {\n\t\t\tif (project.id !== deletedProject.id) {\n\t\t\t\treturn { ...project };\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\n\t\tthis.updateStorage(updatedProjects);\n\t};\n\n\t// FORMS\n\topenNewTaskForm = () => {\n\t\tthis.setState({\n\t\t\tisCreatingTask: true,\n\t\t});\n\t};\n\n\topenEditForm = (item) => {\n\t\tif (item.infoType === 'project') {\n\t\t\tthis.setState({\n\t\t\t\tisEditingProject: true,\n\t\t\t\titemToEdit: item,\n\t\t\t});\n\t\t} else if (item.infoType === 'task') {\n\t\t\tthis.setState({\n\t\t\t\tisEditingTask: true,\n\t\t\t\titemToEdit: item,\n\t\t\t});\n\t\t}\n\t};\n\n\tcloseForm = (formState) => {\n\t\tthis.setState({\n\t\t\t[formState]: false,\n\t\t\titemToEdit: {},\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{this.state.isEditingProject ? (\n\t\t\t\t\t<EditProjectForm\n\t\t\t\t\t\tproject={this.state.itemToEdit}\n\t\t\t\t\t\tcloseForm={() => {\n\t\t\t\t\t\t\tthis.closeForm('isEditingProject');\n\t\t\t\t\t\t}}\n\t\t\t\t\t\teditProject={this.editProject}\n\t\t\t\t\t\teditTask={this.editTask}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t\t{this.state.isCreatingTask ? (\n\t\t\t\t\t<NewTaskForm\n\t\t\t\t\t\tprojects={this.state.projects}\n\t\t\t\t\t\tcurrentProject={this.state.currentProject}\n\t\t\t\t\t\tcloseForm={() => {\n\t\t\t\t\t\t\tthis.closeForm('isCreatingTask');\n\t\t\t\t\t\t}}\n\t\t\t\t\t\taddTask={this.addTask}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t\t{this.state.isEditingTask ? (\n\t\t\t\t\t<EditTaskForm\n\t\t\t\t\t\tprojects={this.state.projects}\n\t\t\t\t\t\ttask={this.state.itemToEdit}\n\t\t\t\t\t\tcurrentProject={this.state.currentProject}\n\t\t\t\t\t\tcloseForm={() => {\n\t\t\t\t\t\t\tthis.closeForm('isEditingTask');\n\t\t\t\t\t\t}}\n\t\t\t\t\t\teditTask={this.editTask}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t\t<Navbar\n\t\t\t\t\ttoggleMenu={this.toggleMenu}\n\t\t\t\t\tcurrentProject={this.state.currentProject}\n\t\t\t\t\tsetCurrentProject={this.setCurrentProject}\n\t\t\t\t/>\n\t\t\t\t<div\n\t\t\t\t\tclassName={\n\t\t\t\t\t\tthis.state.isMenuOpen\n\t\t\t\t\t\t\t? 'underlayer widened'\n\t\t\t\t\t\t\t: 'underlayer'\n\t\t\t\t\t}\n\t\t\t\t></div>\n\t\t\t\t<MenuPanel\n\t\t\t\t\tprojects={this.state.projects}\n\t\t\t\t\tcurrentProject={this.state.currentProject}\n\t\t\t\t\tsetCurrentProject={this.setCurrentProject}\n\t\t\t\t\tisMenuOpen={this.state.isMenuOpen}\n\t\t\t\t\taddProject={this.addProject}\n\t\t\t\t\topenEditForm={this.openEditForm}\n\t\t\t\t\tdeleteProject={this.deleteProject}\n\t\t\t\t/>\n\t\t\t\t<TaskList\n\t\t\t\t\tprojects={this.state.projects}\n\t\t\t\t\tcurrentProject={this.state.currentProject}\n\t\t\t\t\topenNewTaskForm={this.openNewTaskForm}\n\t\t\t\t\topenEditForm={this.openEditForm}\n\t\t\t\t\tdeleteTask={this.deleteTask}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './reset.css';\nimport './App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}